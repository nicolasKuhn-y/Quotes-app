{"version":3,"sources":["hooks/useFetch.js","containers/ButtonContainer.jsx","components/Button.jsx","components/Loader.jsx","components/CharacterImage.jsx","components/Quote.jsx","containers/QuoteContainer.jsx","hooks/useCounter.js","pages/App.jsx","index.js"],"names":["useFetch","url","Error","useState","data","isLoading","dataStore","setDataStore","useEffect","a","fetch","res","json","getFetchData","ButtonContainer","children","className","Button","props","onClickAction","disabled","onClick","Loader","message","CharacterImage","React","memo","query","console","log","length","img","nickname","src","alt","Quote","author","quote","QuoteContainer","initialState","counter","setCounter","increment","decrement","reset","useCounter","quoteNumber","totalQuotes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEaA,EAAW,SAACC,GACvB,IAAKA,EAAK,MAAMC,MAAM,mBAEtB,MAAkCC,mBAAS,CACzCC,KAAM,KACNC,WAAW,IAFb,mBAAOC,EAAP,KAAkBC,EAAlB,KAmBA,OAdAC,qBAAU,YACU,uCAAG,8BAAAC,EAAA,sEACDC,MAAMT,GADL,cACbU,EADa,gBAEAA,EAAIC,OAFJ,OAEbR,EAFa,OAInBG,EAAa,CACXH,KAAK,YAAKA,GACVC,WAAW,IANM,2CAAH,qDAUlBQ,KACC,CAACZ,IAEGK,G,OCtBIQ,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,qBAAKC,UAAU,sBAAf,SAAsCD,KCD3BE,EAAS,SAACC,GACrB,IAAQC,EAA+DD,EAA/DC,cAAR,EAAuED,EAAhDF,iBAAvB,MAAmC,YAAnC,EAAgDI,EAAuBF,EAAvBE,SAAUL,EAAaG,EAAbH,SAE1D,OACE,wBAAQC,UAAWA,EAAWK,QAASF,EAAeC,SAAUA,EAAhE,SACGL,KCLMO,EAAS,SAAC,GAAD,QAAGC,eAAH,MAAa,cAAb,SAAiC,4BAAIA,KCI9CC,EAAiBC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MAC1CC,QAAQC,IAAI,UAEZ,IAAQzB,EAASJ,EAAS,kDAAD,OAC2B2B,IAD5CvB,KAIR,GAAa,OAATA,GAAiC,IAAhBA,EAAK0B,OACxB,OAAO,cAAC,EAAD,CAAQP,QAAQ,yBAGzB,QAA4BnB,GAAQA,EAAK,GAAjC2B,EAAR,EAAQA,IAAKC,EAAb,EAAaA,SAEb,OACE,8BACE,qBAAKhB,UAAU,aAAaiB,IAAKF,EAAKG,IAAKF,SCnBpCG,EAAQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOtB,EAAe,EAAfA,SACrC,OACE,0BAASC,UAAU,QAAnB,UACE,gCACE,mCAAMoB,KACN,4BAAIC,OAGLtB,MCAMuB,EAAiB,SAAC,GAAc,IAAZlC,EAAW,EAAXA,KAC/B,ECTwB,WAAuB,IAAtBmC,EAAqB,uDAAN,EACxC,EAA8BpC,mBAASoC,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,MAAO,CACLD,UACAE,UARgB,kBAAMD,EAAWD,EAAU,IAS3CG,UAPgB,kBAAMF,EAAWD,EAAU,IAQ3CI,MANY,kBAAMH,EAAWF,KDE+BM,GAA7CC,EAAjB,EAAQN,QAAsBE,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,UAAWC,EAApD,EAAoDA,MAEpD,IAA4BxC,GAAQA,EAAK0C,GAAjCV,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MACVU,IAAgB3C,GAAQA,EAAK0B,OAAS,EAE5C,OACE,0BAASd,UAAU,mBAAnB,UACE,cAACQ,EAAD,CAAgBG,MAAOS,IAEvB,cAAC,EAAD,CAAOA,OAAQA,EAAQC,MAAOA,EAA9B,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQlB,cAAewB,EAAWvB,SAA0B,IAAhB0B,EAA5C,oBAIA,cAAC,EAAD,CAAQ3B,cAAeyB,EAAvB,mBAEA,cAAC,EAAD,CACEzB,cAAeuB,EACftB,SAAU0B,IAAgBC,EAF5B,6BEpBGC,EAAM,WACjB,MAA4BhD,EAAS,yCAA7BI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAEd,OACE,sBAAMW,UAAU,uCAAhB,SACGX,EAAY,cAAC,EAAD,IAAa,cAAC,EAAD,CAAgBD,KAAMA,O,MCRtD6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a17c44a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  if (!url) throw Error(\"Url is required\");\r\n\r\n  const [dataStore, setDataStore] = useState({\r\n    data: null,\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getFetchData = async () => {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n\r\n      setDataStore({\r\n        data: [...data],\r\n        isLoading: false,\r\n      });\r\n    };\r\n\r\n    getFetchData();\r\n  }, [url]);\r\n\r\n  return dataStore;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ButtonContainer = ({ children }) => (\r\n  <div className=\"quote-btns__wrapper\">{children}</div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const Button = (props) => {\r\n  const { onClickAction, className = \"btn-quote\", disabled, children } = props;\r\n\r\n  return (\r\n    <button className={className} onClick={onClickAction} disabled={disabled}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = ({ message = \"Cargando...\" }) => <p>{message}</p>;\r\n","import React from \"react\";\r\n\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nimport { Loader } from \"./Loader\";\r\n\r\nexport const CharacterImage = React.memo(({ query }) => {\r\n  console.log(\"RENDER\");\r\n\r\n  const { data } = useFetch(\r\n    `https://breakingbadapi.com/api/characters?name=${query}`\r\n  );\r\n\r\n  if (data === null || data.length === 0) {\r\n    return <Loader message=\"Imagen no encontrada\" />;\r\n  }\r\n\r\n  const { img, nickname } = !!data && data[0];\r\n\r\n  return (\r\n    <div>\r\n      <img className=\"quote__img\" src={img} alt={nickname} />\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nexport const Quote = ({ author, quote, children }) => {\r\n  return (\r\n    <section className=\"quote\">\r\n      <div>\r\n        <h1> {author}</h1>\r\n        <p>{quote}</p>\r\n      </div>\r\n\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useCounter } from \"../hooks/useCounter\";\r\n\r\nimport { ButtonContainer } from \"./ButtonContainer\";\r\n\r\nimport { Button } from \"../components/Button\";\r\nimport { CharacterImage } from \"../components/CharacterImage\";\r\nimport { Quote } from \"../components/Quote\";\r\n\r\nexport const QuoteContainer = ({ data }) => {\r\n  const { counter: quoteNumber, increment, decrement, reset } = useCounter();\r\n\r\n  const { author, quote } = !!data && data[quoteNumber];\r\n  const totalQuotes = !!data && data.length - 1;\r\n\r\n  return (\r\n    <section className=\"quote__Container\">\r\n      <CharacterImage query={author} />\r\n\r\n      <Quote author={author} quote={quote}>\r\n        <ButtonContainer>\r\n          <Button onClickAction={decrement} disabled={quoteNumber === 0}>\r\n            &larr;\r\n          </Button>\r\n\r\n          <Button onClickAction={reset}>Reset</Button>\r\n\r\n          <Button\r\n            onClickAction={increment}\r\n            disabled={quoteNumber === totalQuotes}\r\n          >\r\n            &rarr;\r\n          </Button>\r\n        </ButtonContainer>\r\n      </Quote>\r\n    </section>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useCounter = (initialState = 0) => {\r\n  const [counter, setCounter] = useState(initialState);\r\n\r\n  const increment = () => setCounter(counter + 1);\r\n\r\n  const decrement = () => setCounter(counter - 1);\r\n\r\n  const reset = () => setCounter(initialState);\r\n\r\n  return {\r\n    counter,\r\n    increment,\r\n    decrement,\r\n    reset,\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nimport { QuoteContainer } from \"../containers/QuoteContainer\";\r\n\r\nimport { Loader } from \"../components/Loader\";\r\n\r\nexport const App = () => {\r\n  const { data, isLoading } = useFetch(`https://breakingbadapi.com/api/quotes`);\r\n\r\n  return (\r\n    <main className=\" animate__animated animate__fadeInUp\">\r\n      {isLoading ? <Loader /> : <QuoteContainer data={data} />}\r\n    </main>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./pages/App\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}